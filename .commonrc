#! /bin/bash
# Common commands to be sourced by rc files like .bashrc and .zshrc

# Dircolors
eval `dircolors ~/.dir_colors`

if [ $TILIX_ID  ] || [ $VTE_VERSION  ]; then
    source /etc/profile.d/vte.sh
fi

# Check for keychain and initialize if it exists
if command -v keychain &> /dev/null; then
    eval $(keychain --eval --ignore-missing -Q --quiet id_ed25519 id_rsa id_ed25519_roaming)
    clear
fi

# workaround for terms that don't read xresources right
[[ $TERM == xterm-256color ]] && ~/bin/base16-default.dark.sh  

# Launch neofetch for the pretties
[ -e ~/bin/fetch/neofetch ] && ~/bin/fetch/neofetch

# Print last login info
last -a -9 | sed 's/system boot/system-boot/g' | head -n 2 | tail -n 1 | awk 'BEGIN {ORS=" "} {print "Last Login:", $3 ",", $4, $5, "at", $6, "by", $1, "from"} {if ($10) print $10; else print "system boot"} {ORS="\n"} {print ""}'

[[ -e ~/qmk_utils/activate_wsl.sh ]] && [[ $WSL -eq 0  ]] && source ~/qmk_utils/activate_wsl.sh

# include common exports
source ~/.exports

# Include common aliases for all shells
source ~/.aliases

# Include common functions for all shells
source ~/.functions

# Load local wsl customizations if we're in a WSL environment
[[ -e ~/.wsl ]] && [[ $WSL -eq 0  ]] && source ~/.wsl

# Kubernetes kubectl config munging
# If you have multiple kubeconfig files, dump them in a folder named 
# ~/.kube/config.d
if [[ -e ~/.kube/config.d ]]; then
    export KUBECONFIG="$(find ~/.kube/config.d -maxdepth 1 -type f ! -iname '*readme*' | tr '\n' ":" | sed 's/:$//')"
else
    # not necessary but here for explictness
    export KUBECONFIG="$HOME/.kube/config"
fi

