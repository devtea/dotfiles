#!/bin/bash
# 
# A script to run a few quick checks on a host and report back the general status
MEM=$(free | awk '/Mem/{ print $2 }')

# Display basics
echo ""
echo "Running quick checks"
hostname -f
uptime | sed 's/^ //'
echo ""

# Check for (almost) full filesystems
df -P | awk '{if (NR!=1 && ($3/$2*100)>90) { print $6, "is", $3/$2*100 "% full" }}'

# Check for read-only filesystems
if [[ $(sed 's/errors=remount-ro//g' /proc/mounts | grep -E '\bro\b' | grep -vE '/sys/fs/cgroup\b|' | awk '{ print $2, "Type:", $3, " (" $1 ")"  }' | wc -l) -gt 0 ]]; then
    echo "Read Only filesystems:"
    sed 's/errors=remount-ro//g' /proc/mounts | grep -E '\bro\b' | grep -vE '/sys/fs/cgroup\b' | awk '{ print $2, "Type:", $3, " (" $1 ")"  }'
    echo ""
fi

# Memory checks
if [[ $(free | wc -l) -eq 4 ]]; then 
    # old style free
    free | awk '/buffers\/cache/{ mem=$3/($3+$4)*100; if (mem>=90) {print "High memory usage:", mem "%" }}'
    free | awk '/Swap/{ swap=$3/$2*100; if (swap>=15) {print "High Swap usage:", swap "%" }}' 
else
    # new compact style free
    free | awk '/Mem/{ mem=$3/$2*100; if (mem>=90) {print "High memory usage:", mem "%" }}' 
    free | awk '/Swap/{ swap=$3/$2*100; if (swap>=15) {print "High Swap usage:", swap "%" }}' 
fi

#
# Service checks
#
echo ""

# apache is a special snowflake
if pgrep 'apache|httpd|cgi' 2>&1 >/dev/null; then
    echo "Apache process stats"
    ps aux | grep -E 'apache|httpd|cgi' | grep -v grep | awk -v mem="$MEM" '{ sum+=$6; count++; } END { print sum/count/1024, "MB average over", count, "processes\n" sum/1024, "MB Total\n" sum/mem*100 "% of " mem/1024/1024, "GB total memory\n" }'
fi

# loop through our other interesting services
for simple in Tomcat Redis nginx Gluster Zookeeper Salt-Master Kafka Mongo Couchbase Ruby mySQL java lighttpd; do
    if ps -ef | grep -v grep | grep -i "$simple" 2>&1 >/dev/null; then
        echo "${simple} process stats"
        ps aux | grep -iE "$simple" | grep -v grep | awk -v mem="$MEM" '{ sum+=$6; count++; } END { print sum/count/1024, "MB average over", count, "processes\n" sum/1024, "MB Total\n" sum/mem*100 "% of " mem/1024/1024, "GB total memory\n" }'
    fi
done

echo "Quick checks finished."
