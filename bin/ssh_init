#!/bin/bash
# Very simple script to wrap ssh and push some essential dotfiles / pubkey to remote hosts on first connect.
CONNECT=$1
EXIT_CODE=0
FILE_LIST='~/.vimrc ~/.vim ~/.bashrc ~/.commonrc ~/.distro_detect ~/.exports ~/.functions ~/.aliases ~/.Xresources ~/.bash_profile ~/.terminfo ~/bin/quickcheck'

update_dotfiles() {
    EXIT=0
    cd ~
    if ! rsync --progress -a $FILE_LIST --exclude-from=.essentials_exclude "${CONNECT}":~/ ; then 
        local EXIT=1
    fi
    cd -
    return $EXIT
}

# If our argument comes in as user@host we need to split out the hostname. 
# else it's coming in as just host so take that is it is.
if [[ $CONNECT == *@* ]]; then
  # Note: this assumed the variable (first argument) has no spaces
  arr=(${CONNECT//@/ })
  USER=${arr[0]}
  REMOTE_HOST=${arr[1]}
else
  REMOTE_HOST=$CONNECT
fi

if ! grep -i "$REMOTE_HOST" ~/.ssh/known_hosts &>/dev/null ; then
    # Check .ssh/known-hosts. If ! exists, ssh initially to connect and make homedir. If not, skip sttep 2 and just connect

    # If we have a defined user and that user is root
    if [ ! -z $USER ] && [ "$USER" = "root" ]; then 
        # Just connect, don't try to futz with the environment
        ssh $@ || EXIT_CODE=2
        # Remove our host from the known hosts list after connecting
        sed -i "/${REMOTE_HOST}/d" ~/.ssh/known_hosts
        exit $EXIT_CODE
    else
        #echo "Creating remote home directory, please log in:"
        #ssh "$CONNECT" exit
        if ssh-copy-id -i ~/.ssh/id_rsa.pub $CONNECT; then
            echo "Ensuring .ssh context"
            # we must include an "or exit 0" in our cmd so that the absense of the redhat-release file doesn't 
            # end our script prematurely
            /bin/ssh -t -t $@ '[[ -e /etc/redhat-release ]] && sudo chcon -R -t ssh_home_t ~/.ssh || exit 0' || exit 5

            echo "Copying essential dotfiles"
            if ! update_dotfiles; then
                echo "WARNING: Unable to rsync files"
            fi
        else
            echo "WARNING: Connection error"
            exit 3
        fi
    fi
#else
    # just update dotfiles
    # shit, this means dual auth every time.....
    # TODO 
    # update_dotfiles
fi

# Lastly connect
ssh $@
