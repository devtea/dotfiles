#!/bin/bash
# Very simple script to wrap ssh and push some essential dotfiles / pubkey to remote hosts on first connect.
CONNECT=$1

# If our argument comes in as user@host we need to split out the hostname. 
# else it's coming in as just host so take that is it is.
if [[ $CONNECT == *@* ]]; then
  # Note: this assumed the variable (first argument) has no spaces
  arr=(${CONNECT//@/ })
  USER=${arr[0]}
  REMOTE_HOST=${arr[1]}
else
  REMOTE_HOST=$CONNECT
fi

if ! grep -i "$REMOTE_HOST" ~/.ssh/known_hosts &>/dev/null ; then
    # Check .ssh/known-hosts. If ! exists, ssh initially to connect and make homedir. If not, skip sttep 2 and just connect

    # If we have a defined user and that user is root
    if [ ! -z $USER ] && [ "$USER" = "root" ]; then 
        # Just connect, don't try to futz with the environment
        ssh $@
        # Remove our host from the known hosts list after connecting
        sed -i "/${REMOTE_HOST}/d" ~/.ssh/known_hosts
        exit 0
    else
        #echo "Creating remote home directory, please log in:"
        #ssh "$CONNECT" exit
        ssh-copy-id -i ~/.ssh/id_rsa.pub $CONNECT

        if [ $? ]; then
            echo "Copying essential dotfiles"
            rsync --progress -a ~/.vimrc ~/.vim ~/.bashrc ~/.commonrc ~/.exports ~/.functions ~/.aliases ~/.Xresources ~/.bash_profile ~/.terminfo "${CONNECT}":~/
            if [ $? ]; then
                echo ""
                echo "Environment complete."
            else
                echo ""
                echo "WARNING: Unable to rsync environment files."
            fi
        else
            echo "WARNING: Connection error"
        fi
    fi
fi
# Lastly connect
ssh $@
